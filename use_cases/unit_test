#!/bin/bash

# The UNIT envar must be set before invoking this script
#   - image: build the image from ../build
#   - alpha: pull the image from hub.docker.com
echo UNIT=${UNIT:?}

# under usual circumstances this will extract the path to the directory where this script is located
SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"

# test that the home directory is properly seeded with the image
testSeedHome() {
  if [ -f ${UNIT} ]; then
    export MYSETUP=${UNIT}
  elif [ -f ${UNIT}.example ]; then
    export MYSETUP=${UNIT}.example
  else
    echo Neither file ${UNIT} nor file ${UNIT}.example was found.
    exit 1
  fi
  if [ ${UNIT} != image ]; then
    # pull the image from hub.docker.com
    (
       cd $SCRIPTPATH
       source $MYSETUP
       docker pull $IMAGE
    )
    PULL_RESULT=$?
    assertEqual 0 $PULL_RESULT
  else
    # build the image from ../build
    (
       cd $SCRIPTPATH
       cd ..
       docker build -t devplan .
    )
    IMAGE_BUILD_RESULT=$?
    assertEqual 0 $IMAGE_BUILD_RESULT
  fi
  if [ 0 -eq ${IMAGE_BUILD_RESULT:-1} -o 0 -eq ${PULL_RESULT:-1} ]; then
    (
       cd $SCRIPTPATH
       if [ -d ${UNIT}-home ]; then rm -rf ${UNIT}-home; fi
       # redirect stderr to pipe - ref: https://stackoverflow.com/a/2342841
       #  e.g.: (echo something 1>&2) 2>&1 >/dev/null | grep 'something'
       ( ./devplan_bootstrap $MYSETUP ) 2>&1 >/dev/null | tee ${UNIT}-seedhome-result.txt
    )
    BOOTSTRAP_RESULT=$?
    assertEqual 0 $BOOTSTRAP_RESULT
    if [ 0 -eq $BOOTSTRAP_RESULT ]; then
      assertEqual 1 `grep 'Successfully installed.* planemo-' ${SCRIPTPATH}/${UNIT}-seedhome-result.txt  | wc -l`
      assertEqual 1 `grep demouser ${SCRIPTPATH}/${UNIT}-home/shed/galaxyproject-galaxy/config/tool_shed.yml  | wc -l`
      assertEqual 1 `grep demouser ${SCRIPTPATH}/${UNIT}-home/.planemo.yml  | wc -l`
    fi
  fi
}

# run the tests
source $SCRIPTPATH/bashunit.bash

# vim: sw=2 ts=2 et :
